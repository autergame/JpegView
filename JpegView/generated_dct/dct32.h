// GENERATED CODE
// FDCT IDCT 32x32

inline void fdct_1d_32x32(float *dst, const float *src,
	int dst_stridea, int dst_strideb, int src_stridea, int src_strideb)
{
	for (int i = 0; i < 32; i++)
	{
		const float x00 = src[ 0 * src_stridea] + src[31 * src_stridea];
		const float x11 = src[ 1 * src_stridea] + src[30 * src_stridea];
		const float x12 = src[ 2 * src_stridea] + src[29 * src_stridea];
		const float x13 = src[ 3 * src_stridea] + src[28 * src_stridea];
		const float x14 = src[ 4 * src_stridea] + src[27 * src_stridea];
		const float x15 = src[ 5 * src_stridea] + src[26 * src_stridea];
		const float x16 = src[ 6 * src_stridea] + src[25 * src_stridea];
		const float x17 = src[ 7 * src_stridea] + src[24 * src_stridea];
		const float x18 = src[ 8 * src_stridea] + src[23 * src_stridea];
		const float x19 = src[ 9 * src_stridea] + src[22 * src_stridea];
		const float x1a = src[10 * src_stridea] + src[21 * src_stridea];
		const float x1b = src[11 * src_stridea] + src[20 * src_stridea];
		const float x1c = src[12 * src_stridea] + src[19 * src_stridea];
		const float x1d = src[13 * src_stridea] + src[18 * src_stridea];
		const float x1e = src[14 * src_stridea] + src[17 * src_stridea];
		const float x1f = src[15 * src_stridea] + src[16 * src_stridea];
		const float x01 = src[ 0 * src_stridea] - src[31 * src_stridea];
		const float x02 = src[ 1 * src_stridea] - src[30 * src_stridea];
		const float x03 = src[ 2 * src_stridea] - src[29 * src_stridea];
		const float x04 = src[ 3 * src_stridea] - src[28 * src_stridea];
		const float x05 = src[ 4 * src_stridea] - src[27 * src_stridea];
		const float x06 = src[ 5 * src_stridea] - src[26 * src_stridea];
		const float x07 = src[ 6 * src_stridea] - src[25 * src_stridea];
		const float x08 = src[ 7 * src_stridea] - src[24 * src_stridea];
		const float x09 = src[ 8 * src_stridea] - src[23 * src_stridea];
		const float x0a = src[ 9 * src_stridea] - src[22 * src_stridea];
		const float x0b = src[10 * src_stridea] - src[21 * src_stridea];
		const float x0c = src[11 * src_stridea] - src[20 * src_stridea];
		const float x0d = src[12 * src_stridea] - src[19 * src_stridea];
		const float x0e = src[13 * src_stridea] - src[18 * src_stridea];
		const float x0f = src[14 * src_stridea] - src[17 * src_stridea];
		const float x10 = src[15 * src_stridea] - src[16 * src_stridea];
		const float x62 = x00 + x1f;
		const float x63 = x11 + x1e;
		const float x64 = x12 + x1d;
		const float x65 = x13 + x1c;
		const float x66 = x14 + x1b;
		const float x67 = x15 + x1a;
		const float x68 = x16 + x19;
		const float x69 = x17 + x18;
		const float x6a = x00 - x1f;
		const float x6b = x11 - x1e;
		const float x6c = x12 - x1d;
		const float x6d = x13 - x1c;
		const float x6e = x14 - x1b;
		const float x6f = x15 - x1a;
		const float x70 = x16 - x19;
		const float x71 = x17 - x18;
		const float x72 = x62 + x69;
		const float x73 = x63 + x68;
		const float x74 = x64 + x67;
		const float x75 = x65 + x66;
		const float x76 = x62 - x69;
		const float x77 = x63 - x68;
		const float x78 = x64 - x67;
		const float x79 = x65 - x66;
		const float x7a = x72 + x75;
		const float x7b = x73 + x74;
		const float x7c = x72 - x75;
		const float x7d = x73 - x74;
		const float x7e =  1.387040f * x76 +  0.275899f * x79;
		const float x7f =  1.175876f * x77 +  0.785695f * x78;
		const float x80 = -0.785695f * x77 +  1.175876f * x78;
		const float x81 =  0.275899f * x76 -  1.387040f * x79;
		const float x82 =  0.176777f * (x7e - x7f);
		const float x83 =  0.176777f * (x80 - x81);
		const float x84 =  1.407404f * x6a +  0.138617f * x71;
		const float x85 =  1.353318f * x6b +  0.410525f * x70;
		const float x86 =  1.247225f * x6c +  0.666656f * x6f;
		const float x87 =  1.093202f * x6d +  0.897168f * x6e;
		const float x88 = -0.897168f * x6d +  1.093202f * x6e;
		const float x89 =  0.666656f * x6c -  1.247225f * x6f;
		const float x8a = -0.410525f * x6b +  1.353318f * x70;
		const float x8b =  0.138617f * x6a -  1.407404f * x71;
		const float x8c = x84 + x87;
		const float x8d = x85 + x86;
		const float x8e = x84 - x87;
		const float x8f = x85 - x86;
		const float x90 =  0.176777f * (x8c - x8d);
		const float x91 =  0.230970f * x8e +  0.095671f * x8f;
		const float x92 =  0.095671f * x8e -  0.230970f * x8f;
		const float x93 = x88 + x8b;
		const float x94 = x89 + x8a;
		const float x95 = x88 - x8b;
		const float x96 = x89 - x8a;
		const float x97 =  0.176777f * (x93 - x94);
		const float x98 =  0.230970f * x95 +  0.095671f * x96;
		const float x99 =  0.095671f * x95 -  0.230970f * x96;
		const float x20 =  1.412510f * x01 +  0.069392f * x10;
		const float x21 =  1.398907f * x02 +  0.207508f * x0f;
		const float x22 =  1.371831f * x03 +  0.343626f * x0e;
		const float x23 =  1.331544f * x04 +  0.476434f * x0d;
		const float x24 =  1.278434f * x05 +  0.604654f * x0c;
		const float x25 =  1.213011f * x06 +  0.727051f * x0b;
		const float x26 =  1.135907f * x07 +  0.842446f * x0a;
		const float x27 =  1.047863f * x08 +  0.949728f * x09;
		const float x28 = -0.949728f * x08 +  1.047863f * x09;
		const float x29 =  0.842446f * x07 -  1.135907f * x0a;
		const float x2a = -0.727051f * x06 +  1.213011f * x0b;
		const float x2b =  0.604654f * x05 -  1.278434f * x0c;
		const float x2c = -0.476434f * x04 +  1.331544f * x0d;
		const float x2d =  0.343626f * x03 -  1.371831f * x0e;
		const float x2e = -0.207508f * x02 +  1.398907f * x0f;
		const float x2f =  0.069392f * x01 -  1.412510f * x10;
		const float x30 = x20 + x27;
		const float x31 = x21 + x26;
		const float x32 = x22 + x25;
		const float x33 = x23 + x24;
		const float x34 = x20 - x27;
		const float x35 = x21 - x26;
		const float x36 = x22 - x25;
		const float x37 = x23 - x24;
		const float x3a = x30 + x33;
		const float x3b = x31 + x32;
		const float x3c = x30 - x33;
		const float x3d = x31 - x32;
		const float x3e =  0.176777f * (x3a - x3b);
		const float x3f =  0.230970f * x3c +  0.095671f * x3d;
		const float x40 =  0.095671f * x3c -  0.230970f * x3d;
		const float x41 =  1.387040f * x34 +  0.275899f * x37;
		const float x42 =  1.175876f * x35 +  0.785695f * x36;
		const float x43 = -0.785695f * x35 +  1.175876f * x36;
		const float x44 =  0.275899f * x34 -  1.387040f * x37;
		const float x45 =  0.176777f * (x41 + x42);
		const float x46 =  0.176777f * (x41 - x42);
		const float x47 =  0.176777f * (x43 + x44);
		const float x48 =  0.176777f * (x43 - x44);
		const float x38 =  0.707107f * (x46 - x48);
		const float x39 =  0.707107f * (x46 + x48);
		const float x49 = x28 + x2f;
		const float x4a = x29 + x2e;
		const float x4b = x2a + x2d;
		const float x4c = x2b + x2c;
		const float x4d = x28 - x2f;
		const float x4e = x29 - x2e;
		const float x4f = x2a - x2d;
		const float x50 = x2b - x2c;
		const float x53 = x49 + x4c;
		const float x54 = x4a + x4b;
		const float x55 = x49 - x4c;
		const float x56 = x4a - x4b;
		const float x57 =  0.176777f * (x53 - x54);
		const float x58 =  0.230970f * x55 +  0.095671f * x56;
		const float x59 =  0.095671f * x55 -  0.230970f * x56;
		const float x5a =  1.387040f * x4d +  0.275899f * x50;
		const float x5b =  1.175876f * x4e +  0.785695f * x4f;
		const float x5c = -0.785695f * x4e +  1.175876f * x4f;
		const float x5d =  0.275899f * x4d -  1.387040f * x50;
		const float x5e =  0.176777f * (x5a + x5b);
		const float x5f =  0.176777f * (x5a - x5b);
		const float x60 =  0.176777f * (x5c + x5d);
		const float x61 =  0.176777f * (x5c - x5d);
		const float x51 =  0.707107f * (x5f - x61);
		const float x52 =  0.707107f * (x5f + x61);
		dst[ 0 * dst_stridea] =  0.176777f * (x7a + x7b);
		dst[ 1 * dst_stridea] =  0.176777f * (x3a + x3b);
		dst[ 2 * dst_stridea] =  0.176777f * (x8c + x8d);
		dst[ 3 * dst_stridea] =  0.707107f * (x45 - x60);
		dst[ 4 * dst_stridea] =  0.176777f * (x7e + x7f);
		dst[ 5 * dst_stridea] =  0.707107f * (x45 + x60);
		dst[ 6 * dst_stridea] =  0.707107f * (x91 - x99);
		dst[ 7 * dst_stridea] =  0.707107f * (x3f + x59);
		dst[ 8 * dst_stridea] =  0.230970f * x7c +  0.095671f * x7d;
		dst[ 9 * dst_stridea] =  0.707107f * (x3f - x59);
		dst[10 * dst_stridea] =  0.707107f * (x91 + x99);
		dst[11 * dst_stridea] =  0.707107f * (x38 - x52);
		dst[12 * dst_stridea] =  0.707107f * (x82 - x83);
		dst[13 * dst_stridea] =  0.707107f * (x38 + x52);
		dst[14 * dst_stridea] =  0.707107f * (x90 + x97);
		dst[15 * dst_stridea] =  0.707107f * (x3e + x57);
		dst[16 * dst_stridea] =  0.176777f * (x7a - x7b);
		dst[17 * dst_stridea] =  0.707107f * (x3e - x57);
		dst[18 * dst_stridea] =  0.707107f * (x90 - x97);
		dst[19 * dst_stridea] =  0.707107f * (x39 - x51);
		dst[20 * dst_stridea] =  0.707107f * (x82 + x83);
		dst[21 * dst_stridea] =  0.707107f * (x39 + x51);
		dst[22 * dst_stridea] =  0.707107f * (x92 - x98);
		dst[23 * dst_stridea] =  0.707107f * (x40 + x58);
		dst[24 * dst_stridea] =  0.095671f * x7c -  0.230970f * x7d;
		dst[25 * dst_stridea] =  0.707107f * (x40 - x58);
		dst[26 * dst_stridea] =  0.707107f * (x92 + x98);
		dst[27 * dst_stridea] =  0.707107f * (x47 - x5e);
		dst[28 * dst_stridea] =  0.176777f * (x80 + x81);
		dst[29 * dst_stridea] =  0.707107f * (x47 + x5e);
		dst[30 * dst_stridea] =  0.176777f * (x93 + x94);
		dst[31 * dst_stridea] =  0.176777f * (x53 + x54);
		dst += dst_strideb;
		src += src_strideb;
	}
}

void fdct_32x32(float *dst, const float *src)
{
	float* tmp = (float*)calloc(32 * 32, 4);
	fdct_1d_32x32(tmp, src, 1, 32, 1, 32);
	fdct_1d_32x32(dst, tmp, 32, 1, 32, 1);
	free(tmp);
}

inline void idct_1d_32x32(float *dst, const float *src,
	int dst_stridea, int dst_strideb, int src_stridea, int src_strideb)
{
	for (int i = 0; i < 32; i++)
	{
		const float x00 =  1.414214f * src[ 0 * src_stridea];
		const float x11 =  1.412510f * src[ 1 * src_stridea] +  0.069392f * src[31 * src_stridea];
		const float x12 =  1.407404f * src[ 2 * src_stridea] +  0.138617f * src[30 * src_stridea];
		const float x13 =  1.398907f * src[ 3 * src_stridea] +  0.207508f * src[29 * src_stridea];
		const float x14 =  1.387040f * src[ 4 * src_stridea] +  0.275899f * src[28 * src_stridea];
		const float x15 =  1.371831f * src[ 5 * src_stridea] +  0.343626f * src[27 * src_stridea];
		const float x16 =  1.353318f * src[ 6 * src_stridea] +  0.410525f * src[26 * src_stridea];
		const float x17 =  1.331544f * src[ 7 * src_stridea] +  0.476434f * src[25 * src_stridea];
		const float x18 =  1.306563f * src[ 8 * src_stridea] +  0.541196f * src[24 * src_stridea];
		const float x19 =  1.278434f * src[ 9 * src_stridea] +  0.604654f * src[23 * src_stridea];
		const float x1a =  1.247225f * src[10 * src_stridea] +  0.666656f * src[22 * src_stridea];
		const float x1b =  1.213011f * src[11 * src_stridea] +  0.727051f * src[21 * src_stridea];
		const float x1c =  1.175876f * src[12 * src_stridea] +  0.785695f * src[20 * src_stridea];
		const float x1d =  1.135907f * src[13 * src_stridea] +  0.842446f * src[19 * src_stridea];
		const float x1e =  1.093202f * src[14 * src_stridea] +  0.897168f * src[18 * src_stridea];
		const float x1f =  1.047863f * src[15 * src_stridea] +  0.949728f * src[17 * src_stridea];
		const float x01 =  1.414214f * src[16 * src_stridea];
		const float x02 = -0.949728f * src[15 * src_stridea] +  1.047863f * src[17 * src_stridea];
		const float x03 =  0.897168f * src[14 * src_stridea] -  1.093202f * src[18 * src_stridea];
		const float x04 = -0.842446f * src[13 * src_stridea] +  1.135907f * src[19 * src_stridea];
		const float x05 =  0.785695f * src[12 * src_stridea] -  1.175876f * src[20 * src_stridea];
		const float x06 = -0.727051f * src[11 * src_stridea] +  1.213011f * src[21 * src_stridea];
		const float x07 =  0.666656f * src[10 * src_stridea] -  1.247225f * src[22 * src_stridea];
		const float x08 = -0.604654f * src[ 9 * src_stridea] +  1.278434f * src[23 * src_stridea];
		const float x09 =  0.541196f * src[ 8 * src_stridea] -  1.306563f * src[24 * src_stridea];
		const float x0a = -0.476434f * src[ 7 * src_stridea] +  1.331544f * src[25 * src_stridea];
		const float x0b =  0.410525f * src[ 6 * src_stridea] -  1.353318f * src[26 * src_stridea];
		const float x0c = -0.343626f * src[ 5 * src_stridea] +  1.371831f * src[27 * src_stridea];
		const float x0d =  0.275899f * src[ 4 * src_stridea] -  1.387040f * src[28 * src_stridea];
		const float x0e = -0.207508f * src[ 3 * src_stridea] +  1.398907f * src[29 * src_stridea];
		const float x0f =  0.138617f * src[ 2 * src_stridea] -  1.407404f * src[30 * src_stridea];
		const float x10 = -0.069392f * src[ 1 * src_stridea] +  1.412510f * src[31 * src_stridea];
		const float x6c = x00 + x01;
		const float x6e = x11 + x1f;
		const float x6f = x12 + x1e;
		const float x70 = x13 + x1d;
		const float x71 = x14 + x1c;
		const float x72 = x15 + x1b;
		const float x73 = x16 + x1a;
		const float x74 = x17 + x19;
		const float x75 =  1.414214f * x18;
		const float x76 = x00 - x01;
		const float x77 = x11 - x1f;
		const float x78 = x12 - x1e;
		const float x79 = x13 - x1d;
		const float x7a = x14 - x1c;
		const float x7b = x15 - x1b;
		const float x7c = x16 - x1a;
		const float x6d = x17 - x19;
		const float x83 = x6c + x75;
		const float x84 = x6e + x74;
		const float x85 = x6f + x73;
		const float x86 = x70 + x72;
		const float x87 =  1.414214f * x71;
		const float x88 = x6c - x75;
		const float x89 = x6e - x74;
		const float x8a = x6f - x73;
		const float x8b = x70 - x72;
		const float x8e = x83 + x87;
		const float x8f = x84 + x86;
		const float x90 =  1.414214f * x85;
		const float x91 = x83 - x87;
		const float x92 = x84 - x86;
		const float x93 =  0.176777f * (x8e - x90);
		const float x94 =  0.176777f * (x91 + x92);
		const float x95 =  0.176777f * (x91 - x92);
		const float x96 =  1.414214f * x88;
		const float x97 =  1.306563f * x89 +  0.541196f * x8b;
		const float x98 =  1.414214f * x8a;
		const float x99 = -0.541196f * x89 +  1.306563f * x8b;
		const float x9a =  0.125000f * (x96 + x98) +  0.176777f * x97;
		const float x9b =  0.176777f * (x96 - x98);
		const float x9c =  0.125000f * (x96 + x98) -  0.176777f * x97;
		const float x9d =  0.250000f * x99;
		const float x8c =  0.707107f * (x9b - x9d);
		const float x8d =  0.707107f * (x9b + x9d);
		const float x9e =  1.414214f * x76;
		const float x9f =  0.275899f * x6d +  1.387040f * x77;
		const float xa0 =  1.306563f * x78 +  0.541196f * x7c;
		const float xa1 =  1.175876f * x79 +  0.785695f * x7b;
		const float xa2 =  1.414214f * x7a;
		const float xa3 = -0.785695f * x79 +  1.175876f * x7b;
		const float xa4 =  0.541196f * x78 -  1.306563f * x7c;
		const float xa5 =  1.387040f * x6d -  0.275899f * x77;
		const float xa7 = x9e + xa2;
		const float xa8 = x9f + xa1;
		const float xa9 =  1.414214f * xa0;
		const float xaa = x9e - xa2;
		const float xab = x9f - xa1;
		const float xac =  0.125000f * (xa7 + xa9) +  0.176777f * xa8;
		const float xad =  0.176777f * (xa7 - xa9);
		const float xae =  0.125000f * (xa7 + xa9) -  0.176777f * xa8;
		const float xaf =  0.176777f * (xaa + xab);
		const float xb0 =  0.176777f * (xaa - xab);
		const float xb1 =  1.414214f * xa4;
		const float xb2 = xa3 + xa5;
		const float xb3 = xa3 - xa5;
		const float xb4 =  0.176777f * (xb1 + xb2);
		const float xb5 =  0.176777f * (xb1 - xb2);
		const float xb6 =  0.250000f * xb3;
		const float xa6 = -xb5;
		const float x7d =  0.707107f * (xaf - xa6);
		const float x7e =  0.707107f * (xaf + xa6);
		const float x7f =  0.707107f * (xad + xb6);
		const float x80 =  0.707107f * (xad - xb6);
		const float x81 =  0.707107f * (xb0 - xb4);
		const float x82 =  0.707107f * (xb0 + xb4);
		const float x20 =  1.414214f * x09;
		const float x21 = x08 + x0a;
		const float x22 = x07 + x0b;
		const float x23 = x06 + x0c;
		const float x24 = x05 + x0d;
		const float x25 = x04 + x0e;
		const float x26 = x03 + x0f;
		const float x27 = x02 + x10;
		const float x28 = x02 - x10;
		const float x29 = x03 - x0f;
		const float x2a = x04 - x0e;
		const float x2b = x05 - x0d;
		const float x2c = x06 - x0c;
		const float x2d = x07 - x0b;
		const float x2e = x08 - x0a;
		const float x37 =  1.414214f * x20;
		const float x38 =  1.387040f * x21 +  0.275899f * x27;
		const float x39 =  1.306563f * x22 +  0.541196f * x26;
		const float x3a =  1.175876f * x23 +  0.785695f * x25;
		const float x3b =  1.414214f * x24;
		const float x3c = -0.785695f * x23 +  1.175876f * x25;
		const float x3d =  0.541196f * x22 -  1.306563f * x26;
		const float x3e = -0.275899f * x21 +  1.387040f * x27;
		const float x40 = x37 + x3b;
		const float x41 = x38 + x3a;
		const float x42 =  1.414214f * x39;
		const float x43 = x37 - x3b;
		const float x44 = x38 - x3a;
		const float x45 =  0.125000f * (x40 + x42) +  0.176777f * x41;
		const float x46 =  0.176777f * (x40 - x42);
		const float x47 =  0.125000f * (x40 + x42) -  0.176777f * x41;
		const float x48 =  0.176777f * (x43 + x44);
		const float x49 =  0.176777f * (x43 - x44);
		const float x4a =  1.414214f * x3d;
		const float x4b = x3c + x3e;
		const float x4c = x3c - x3e;
		const float x4d =  0.176777f * (x4a + x4b);
		const float x4e =  0.176777f * (x4a - x4b);
		const float x4f =  0.250000f * x4c;
		const float x3f = -x4e;
		const float x2f =  0.707107f * (x48 - x3f);
		const float x30 =  0.707107f * (x48 + x3f);
		const float x31 =  0.707107f * (x46 + x4f);
		const float x32 =  0.707107f * (x46 - x4f);
		const float x33 =  0.707107f * (x49 - x4d);
		const float x34 =  0.707107f * (x49 + x4d);
		const float x50 =  1.414214f * x2b;
		const float x51 = x2a + x2c;
		const float x52 = x29 + x2d;
		const float x53 = x28 + x2e;
		const float x54 = x28 - x2e;
		const float x55 = x29 - x2d;
		const float x56 = x2a - x2c;
		const float x5e =  1.414214f * x50;
		const float x5f =  1.306563f * x51 +  0.541196f * x53;
		const float x60 =  1.414214f * x52;
		const float x61 = -0.541196f * x51 +  1.306563f * x53;
		const float x62 =  0.125000f * (x5e + x60) +  0.176777f * x5f;
		const float x63 =  0.176777f * (x5e - x60);
		const float x64 =  0.125000f * (x5e + x60) -  0.176777f * x5f;
		const float x65 =  0.250000f * x61;
		const float x57 =  0.707107f * (x63 - x65);
		const float x58 =  0.707107f * (x63 + x65);
		const float x66 =  1.414214f * x55;
		const float x67 = x54 + x56;
		const float x68 = x54 - x56;
		const float x69 =  0.176777f * (x66 + x67);
		const float x6a =  0.176777f * (x66 - x67);
		const float x6b =  0.250000f * x68;
		const float x59 = -x6a;
		const float x35 = -x57;
		const float x36 = -x64;
		const float x5a = -x2f;
		const float x5b = -x31;
		const float x5c = -x33;
		const float x5d = -x47;
		dst[ 0 * dst_stridea] =  0.125000f * (x8e + x90) +  0.176777f * x8f;
		dst[ 1 * dst_stridea] = -0.707107f * x5d +  0.707107f * xac;
		dst[ 2 * dst_stridea] =  0.707107f * (x5d + xac);
		dst[ 3 * dst_stridea] =  0.707107f * (x36 + x9a);
		dst[ 4 * dst_stridea] = -0.707107f * x36 +  0.707107f * x9a;
		dst[ 5 * dst_stridea] = -0.707107f * x34 +  0.707107f * x7d;
		dst[ 6 * dst_stridea] =  0.707107f * (x34 + x7d);
		dst[ 7 * dst_stridea] =  0.707107f * (x59 + x94);
		dst[ 8 * dst_stridea] = -0.707107f * x59 +  0.707107f * x94;
		dst[ 9 * dst_stridea] = -0.707107f * x5c +  0.707107f * x7e;
		dst[10 * dst_stridea] =  0.707107f * (x5c + x7e);
		dst[11 * dst_stridea] =  0.707107f * (x58 + x8c);
		dst[12 * dst_stridea] = -0.707107f * x58 +  0.707107f * x8c;
		dst[13 * dst_stridea] = -0.707107f * x32 +  0.707107f * x7f;
		dst[14 * dst_stridea] =  0.707107f * (x32 + x7f);
		dst[15 * dst_stridea] =  0.707107f * (x6b + x93);
		dst[16 * dst_stridea] = -0.707107f * x6b +  0.707107f * x93;
		dst[17 * dst_stridea] = -0.707107f * x5b +  0.707107f * x80;
		dst[18 * dst_stridea] =  0.707107f * (x5b + x80);
		dst[19 * dst_stridea] =  0.707107f * (x35 + x8d);
		dst[20 * dst_stridea] = -0.707107f * x35 +  0.707107f * x8d;
		dst[21 * dst_stridea] = -0.707107f * x30 +  0.707107f * x81;
		dst[22 * dst_stridea] =  0.707107f * (x30 + x81);
		dst[23 * dst_stridea] =  0.707107f * (x69 + x95);
		dst[24 * dst_stridea] = -0.707107f * x69 +  0.707107f * x95;
		dst[25 * dst_stridea] = -0.707107f * x5a +  0.707107f * x82;
		dst[26 * dst_stridea] =  0.707107f * (x5a + x82);
		dst[27 * dst_stridea] =  0.707107f * (x62 + x9c);
		dst[28 * dst_stridea] = -0.707107f * x62 +  0.707107f * x9c;
		dst[29 * dst_stridea] = -0.707107f * x45 +  0.707107f * xae;
		dst[30 * dst_stridea] =  0.707107f * (x45 + xae);
		dst[31 * dst_stridea] =  0.125000f * (x8e + x90) -  0.176777f * x8f;
		dst += dst_strideb;
		src += src_strideb;
	}
}

void idct_32x32(float *dst, const float *src)
{
	float* tmp = (float*)calloc(32 * 32, 4);
	idct_1d_32x32(tmp, src, 1, 32, 1, 32);
	idct_1d_32x32(dst, tmp, 32, 1, 32, 1);
	free(tmp);
}